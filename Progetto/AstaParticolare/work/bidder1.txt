:- dynamic ho_salutato/1.
:- dynamic ho_offerta/1.
:- dynamic ho_oggetto/1.
:- dynamic ho_oggetto/1.
:- dynamic ho_fatto_offerta/1.
:- dynamic tempo_attesa/1.
:- dynamic apertura_offerte/1.
:- dynamic ho_inviato_sollecito/1.
:- dynamic offerta_inviata/1.

offerta_inviata(no).
ho_inviato_sollecito(no).
sveglio(si).
ho_offerta(no).
ho_oggetto(no).
ho_fatto_offerta(no).
tempo_attesa(0).
ho_salutato(no).
apertura_offerte(no).
bidder(bidder1).
bidder(bidder2).
bidder(bidder3).
proprietario(proprietario).
banditore(banditore).

pronto:- sveglio(si), ho_salutato(no).
prontoI:> write('Ciao a tutti, sono pronto!'), nl, retract(ho_salutato(no)), assert(ho_salutato(si)), messageA(banditore, send_message(prontoag(Me), Me)).

attendoBanditore:- ho_offerta(no), ho_salutato(si), tempo_attesa(T), T < 2.
attendoBanditoreI:> write('Attendo che il banditore apra Asta.'), nl, sleep(5), tempo_attesa(T), T1 is T+1, retract(tempo_attesa(T)), assert(tempo_attesa(T1)).

noApertura:- apertura_offerte(no), tempo_attesa(T), T >=2, ho_inviato_sollecito(no).
noAperturaI:> write('Il banditore non ha aperto le offerte, gli invio un messaggio'), retract(ho_inviato_sollecito(no)), assert(ho_inviato_sollecito(si)), messageA(banditore,send_message(sollecito, Me)).

aperturaE:> write('Adesso posso fare un offerta'), nl, retract(apertura_offerte(no)), assert(apertura_offerte(si)).

faccioOfferta:-ho_oggetto(no), apertura_offerte(si), ho_fatto_offerta(no).
faccioOffertaI:> write('Faccio una offerta'), nl, random(1, 50, O), assert(offerta(O)), write('ho offerto: '), write(O),nl, retract(ho_fatto_offerta(no)), assert(ho_fatto_offerta(si)), contatto_banditore.

contatto_banditore:- nl, write('Ho inviato l offerta'),
retract(offerta_inviata(no)), assert(offerta_inviata(si)), offerta(O), messageA(banditore,send_message(proposta(Me, O),Me)).

accettataE :>sleep(2), nl, write('Ho vinto oggetto'), retract(ho_oggetto(no)), assert(ho_oggetto(si)), nl, write('Invio i richiesta al proprietario riguardo oggetto'),nl, messageA(proprietario, send_message(richiesta_invio(Me),Me)).


